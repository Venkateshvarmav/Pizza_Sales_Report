drop table if exists pizza;

create table pizza(
	pizza_id int,
	order_id int,
	pizza_name_id varchar(50),
	quantity int,
	order_date date,
	order_time time,
	unit_price float,
	total_price float,
	pizza_size varchar(5),
	pizza_category varchar(20),
	pizza_ingredients varchar(125),
	pizza_name varchar(50)
);


select * from pizza;

select count(distinct(order_id)) from pizza;

select distinct pizza_category from pizza;

-- Total Revenue
select sum(total_price) as total_revenue from pizza;


-- average order VALUE
select sum(total_price)/count(distinct(order_id)) as avg_order_value from pizza;


-- total pizza sold
select sum(quantity) as total_pizza_sold from pizza;


-- Avg pizza per ORDER
SELECT round((SUM(quantity)::numeric/ COUNT(DISTINCT order_id)::numeric),2)
FROM pizza;

-- daily trend for orders
with weekname_cte as(
select to_char(order_date, 'Day') as weekname,count(distinct(order_id)) as number_of_orders,extract(DOW from order_date) from pizza
group by 1,3
order by extract(DOW from order_date))
select weekname,number_of_orders from weekname_cte;

--  monthly trend of orders
with monthname_cte as
(select to_char(order_date,'Month') as month,extract(month from order_date),count(distinct(order_id)) as number_of_orders from pizza
group by 1,2
order by 2)
select month, number_of_orders from monthname_cte;

--  percentage of sales by category

select pizza_category, count(*) as total,round(sum(total_price)::numeric/(select sum(total_price) from pizza)::numeric*100,2) as pct_total_sales from pizza
group by 1

-- percantage of sale by pizza size
select pizza_size,round(sum(total_price)::numeric/(select sum(total_price) from pizza)::numeric*100,2) from pizza
group by 1

-- top 5 best seller by total revenue

 select pizza_name,sum(total_price) as total_revenue from pizza
 group by 1
 order by 2 desc
 limit 5;

-- bottom 5 worst seller by total_revenue
 select pizza_name,sum(total_price) as total_revenue from pizza
 group by 1
 order by 2 
 limit 5;

-- top 5 best seller by total quantiity 

select pizza_name,count(*) as total_quanitity from pizza  
group by 1
order by 2 desc
limit 5

-- bottom 5 worst seller by total quantiity 
select pizza_name,count(*) as total_quanitity from pizza  
group by 1
order by 2
limit 5

  
--top 5 best seller by and total orders

select pizza_name,count(distinct(order_id))  as total_orders from pizza
group by 1
order by 2 desc
limit 5

--bottom 5 worst seller by and total orders

select pizza_name,count(distinct(order_id))  as total_orders from pizza
group by 1
order by 2 	
limit 5

-- Total revenue generated by category

select 
	pizza_category,
	round(sum(total_price)::numeric,2) 
from pizza
group by 1;

-- High value orders

with high_order_cte as (
select 
	distinct(order_id),
	sum(total_price) as total
from pizza
group by 1
order by 2 desc
)
select * from high_order_cte
where total > 250